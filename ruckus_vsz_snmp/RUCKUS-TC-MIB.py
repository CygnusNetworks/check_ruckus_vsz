# PySNMP SMI module. Autogenerated from smidump -f python RUCKUS-TC-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 19 15:23:57 2016,
# Python version sys.version_info(major=2, minor=7, micro=11, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ruckusCommonTCModule, ) = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusCommonTCModule")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "TimeTicks")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class RuckusAAAServiceType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(4,3,1,2,)
    namedValues = NamedValues(("active-directory", 1), ("ldap-directory", 2), ("aaa-authentication", 3), ("aaa-accounting", 4), )
    
class RuckusAPApproveMode(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,)
    namedValues = NamedValues(("approved", 1), ("not-approved", 2), )
    
class RuckusAPIpAddressSettingMode(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,3,2,)
    namedValues = NamedValues(("admin-by-zd", 1), ("admin-by-dhcp", 2), ("admin-by-ap", 3), )
    
class RuckusAPMeshConfigurationMode(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,4,3,2,)
    namedValues = NamedValues(("auto", 1), ("root-ap", 2), ("mesh-ap", 3), ("disabled", 4), )
    
class RuckusAPRadioTxPowerLevel(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(3,2,6,1,5,4,)
    namedValues = NamedValues(("auto", 1), ("full", 2), ("half-full", 3), ("quarter-full", 4), ("one-eighth-full", 5), ("one-tenth-full", 6), )
    
class RuckusAPRadioType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,3,4,2,)
    namedValues = NamedValues(("ieee80211bg", 1), ("ieee80211na", 2), ("ieee80211a", 3), ("ieee80211n", 4), )
    
class RuckusAPRadioType24(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,3,4,)
    namedValues = NamedValues(("ieee80211b", 1), ("ieee80211g", 2), ("ieee80211bg", 3), ("ieee80211ng", 4), )
    
class RuckusAPRadioType5(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,2,3,)
    namedValues = NamedValues(("ieee80211a", 1), ("ieee80211n", 2), ("ieee80211nag", 3), )
    
class RuckusAPUplinkSelectionMode(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,)
    namedValues = NamedValues(("smart", 1), ("manual", 2), )
    
class RuckusAPWirelessChannel(Integer32):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,11)
    
class RuckusAdminStatus(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,2,)
    namedValues = NamedValues(("enable", 1), ("disable", 2), )
    
class RuckusAuthenticationType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,5,1,4,3,)
    namedValues = NamedValues(("open", 1), ("shared", 2), ("eap", 3), ("mac-address", 4), ("eap-mac-mix", 5), )
    
class RuckusCountryCode(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(2,2)
    fixedLength = 2
    
class RuckusEncryptionType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(3,4,6,2,1,5,)
    namedValues = NamedValues(("wpa", 1), ("wpa2", 2), ("wpa-Mixed", 3), ("wep-64", 4), ("wep-128", 5), ("none-enc", 6), )
    
class RuckusFequency(Integer32):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(2412,5805)
    
class RuckusNameString(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(1,128)
    
class RuckusPassPhrase(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(8,64)
    
class RuckusRadioMode(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,4,2,5,3,6,)
    namedValues = NamedValues(("ieee802dot11b", 1), ("ieee802dot11g", 2), ("ieee802dot11Mixed", 3), ("ieee802dot11a", 4), ("ieee802dot11ng", 5), ("ieee802dot11na", 6), )
    
class RuckusRate(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(1,126)
    
class RuckusRateLimiting(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(6,4,2,0,1,8,7,5,3,9,)
    namedValues = NamedValues(("disable", 0), ("rate100Kbps", 1), ("rate250Kbps", 2), ("rate500Kbps", 3), ("rate1Mbps", 4), ("rate2Mbps", 5), ("rate5Mbps", 6), ("rate10Mbps", 7), ("rate20Mbps", 8), ("rate50Mbps", 9), )
    
class RuckusSNMPVersionType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,2,)
    namedValues = NamedValues(("v2", 1), ("v3", 2), )
    
class RuckusSNMPv3AuthenticationType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,)
    namedValues = NamedValues(("md5", 1), ("sha", 2), )
    
class RuckusSNMPv3EncryptionType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,)
    namedValues = NamedValues(("des", 1), ("aes", 2), )
    
class RuckusSSID(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(2,32)
    
class RuckusSysLogLevel(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(3,2,1,)
    namedValues = NamedValues(("more", 1), ("warning-and-critical", 2), ("critical-only", 3), )
    
class RuckusWEPKey(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(5,5),ValueSizeConstraint(26,26),)
    
class RuckusWLANServicePriority(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,2,)
    namedValues = NamedValues(("high", 1), ("low", 2), )
    
class RuckusWLANServiceType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(3,2,1,)
    namedValues = NamedValues(("standardUsage", 1), ("guestAccess", 2), ("hotSpotService", 3), )
    
class RuckusWPACipherType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,3,4,1,)
    namedValues = NamedValues(("tkip", 1), ("aes", 2), ("auto", 3), ("none", 4), )
    
class RuckusWPAPassPhrase(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(8,64)
    
class RuckusZDAPManagementAdminControl(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(1,2,)
    namedValues = NamedValues(("delete", 1), ("associated", 2), )
    
class RuckusdB(Integer32):
    pass


# Objects

ruckusTCMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1)).setRevisions(("2014-05-19 11:00",))
if mibBuilder.loadTexts: ruckusTCMIB.setOrganization("Ruckus Wireless, Inc.")
if mibBuilder.loadTexts: ruckusTCMIB.setContactInfo("Ruckus Wireless, Inc.\n\n350 West Java Dr.\nSunnyvale, CA 94089\nUSA\n\nT: +1 (650) 265-4200\nF: +1 (408) 738-2065\nEMail: info@ruckuswireless.com\nWeb: www.ruckuswireless.com")
if mibBuilder.loadTexts: ruckusTCMIB.setDescription("This is the mib module for defining all the textual\nconventions.")
ruckusTCObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1, 1))
ruckusTCEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1, 2))
ruckusTCConf = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1, 3))
ruckusTCGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1, 3, 1))
ruckusTCCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 1, 1, 3, 2))

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("RUCKUS-TC-MIB", PYSNMP_MODULE_ID=ruckusTCMIB)

# Types
mibBuilder.exportSymbols("RUCKUS-TC-MIB", RuckusAAAServiceType=RuckusAAAServiceType, RuckusAPApproveMode=RuckusAPApproveMode, RuckusAPIpAddressSettingMode=RuckusAPIpAddressSettingMode, RuckusAPMeshConfigurationMode=RuckusAPMeshConfigurationMode, RuckusAPRadioTxPowerLevel=RuckusAPRadioTxPowerLevel, RuckusAPRadioType=RuckusAPRadioType, RuckusAPRadioType24=RuckusAPRadioType24, RuckusAPRadioType5=RuckusAPRadioType5, RuckusAPUplinkSelectionMode=RuckusAPUplinkSelectionMode, RuckusAPWirelessChannel=RuckusAPWirelessChannel, RuckusAdminStatus=RuckusAdminStatus, RuckusAuthenticationType=RuckusAuthenticationType, RuckusCountryCode=RuckusCountryCode, RuckusEncryptionType=RuckusEncryptionType, RuckusFequency=RuckusFequency, RuckusNameString=RuckusNameString, RuckusPassPhrase=RuckusPassPhrase, RuckusRadioMode=RuckusRadioMode, RuckusRate=RuckusRate, RuckusRateLimiting=RuckusRateLimiting, RuckusSNMPVersionType=RuckusSNMPVersionType, RuckusSNMPv3AuthenticationType=RuckusSNMPv3AuthenticationType, RuckusSNMPv3EncryptionType=RuckusSNMPv3EncryptionType, RuckusSSID=RuckusSSID, RuckusSysLogLevel=RuckusSysLogLevel, RuckusWEPKey=RuckusWEPKey, RuckusWLANServicePriority=RuckusWLANServicePriority, RuckusWLANServiceType=RuckusWLANServiceType, RuckusWPACipherType=RuckusWPACipherType, RuckusWPAPassPhrase=RuckusWPAPassPhrase, RuckusZDAPManagementAdminControl=RuckusZDAPManagementAdminControl, RuckusdB=RuckusdB)

# Objects
mibBuilder.exportSymbols("RUCKUS-TC-MIB", ruckusTCMIB=ruckusTCMIB, ruckusTCObjects=ruckusTCObjects, ruckusTCEvents=ruckusTCEvents, ruckusTCConf=ruckusTCConf, ruckusTCGroups=ruckusTCGroups, ruckusTCCompls=ruckusTCCompls)

